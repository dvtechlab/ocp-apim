# Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "wso2am.resource.prefix" . }}-all-in-one
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      deployment: {{ template "wso2am.resource.prefix" . }}-all-in-one
      node: {{ template "wso2am.resource.prefix" . }}-all-in-one
  template:
    metadata:
      annotations:
        checksum.am.conf: {{ include (print $.Template.BasePath "/am/deployment-conf.yaml") . | sha256sum }}
      labels:
        deployment: {{ template "wso2am.resource.prefix" . }}-all-in-one
        node: {{ template "wso2am.resource.prefix" . }}-all-in-one
        product: apim
    spec:
      serviceAccountName: {{ .Values.kubernetes.serviceAccount }}
      # initContainers:
      #   - name: init-db
      #     image: busybox:1.32
      #     command: ['sh', '-c', 'echo -e "Checking for the availability of DB Server deployment"; while ! nc -z "{{ .Values.wso2.deployment.am.cp.db.hostname }}" {{ .Values.wso2.deployment.am.cp.db.port }}; do sleep 1; printf "-"; done; echo -e "  >> DB Server has started";']
      #   - name: init-db-connector-download
      #     image: busybox:1.32
      #     command:
      #       - /bin/sh
      #       - "-c"
      #       - |
      #         set -e
      #         connector_version=8.0.30
      #         wget https://repo1.maven.org/maven2/mysql/mysql-connector-java/${connector_version}/mysql-connector-java-${connector_version}.jar -P /db-connector-jar/ 
      #     volumeMounts:
      #       - name: db-connector-jar
      #         mountPath: /db-connector-jar
      containers:
        - name: {{ template "wso2am.resource.prefix" . }}-all-in-one
{{- include "image" (dict "Values" .Values "deployment" .Values.wso2.deployment.am) | indent 10 }}
          imagePullPolicy: {{ .Values.wso2.deployment.am.imagePullPolicy }}
          # startupProbe:
          #   exec:
          #     command:
          #       - /bin/sh
          #       - -c
          #       - nc -z localhost 9443
          #   initialDelaySeconds: {{ .Values.wso2.deployment.am.cp.startupProbe.initialDelaySeconds }}
          #   periodSeconds: {{ .Values.wso2.deployment.am.cp.startupProbe.periodSeconds }}
          #   failureThreshold: {{ .Values.wso2.deployment.am.cp.startupProbe.failureThreshold }}
          # livenessProbe:
          #   httpGet:
          #     path: /services/Version
          #     port: 9763
          #   periodSeconds: {{ .Values.wso2.deployment.am.cp.livenessProbe.periodSeconds }}
          # readinessProbe:
          #   httpGet:
          #     path: /services/Version
          #     port: 9763
          #   initialDelaySeconds: {{ .Values.wso2.deployment.am.cp.readinessProbe.initialDelaySeconds }}
          #   periodSeconds: {{ .Values.wso2.deployment.am.cp.readinessProbe.periodSeconds }}
          # lifecycle:
          #   preStop:
          #     exec:
          #       command:  ['sh', '-c', '${WSO2_SERVER_HOME}/bin/api-manager.sh stop']
          resources:
            requests:
              memory: {{ .Values.wso2.deployment.am.cp.resources.requests.memory }}
              cpu: {{ .Values.wso2.deployment.am.cp.resources.requests.cpu }}
            limits:
              memory: {{ .Values.wso2.deployment.am.cp.resources.limits.memory }}
              cpu: {{ .Values.wso2.deployment.am.cp.resources.limits.cpu }}
          securityContext:
            runAsUser: 802
            allowPrivilegeEscalation: false            
            runAsNonRoot: true 
            seccompProfile: 
              type: RuntimeDefault
            capabilities:
              drop: ["ALL"]           
          ports:
            - containerPort: 9763
              protocol: TCP
            - containerPort: 9443
              protocol: TCP
            - containerPort: 8280
              protocol: TCP
            - containerPort: 8243
              protocol: TCP
            - containerPort: 9711
              protocol: TCP
            - containerPort: 9611
              protocol: TCP
            - containerPort: 5672
              protocol: TCP
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: JVM_MEM_OPTS
              value: "-Xms{{ .Values.wso2.deployment.am.cp.resources.jvm.heap.memory.xms }} -Xmx{{ .Values.wso2.deployment.am.cp.resources.jvm.heap.memory.xmx }}"
            - name: KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dev-etisalat-am-keystore-password
                  key: password
            - name: TRUSTSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dev-etisalat-am-client-truststore-password
                  key: password
          volumeMounts:
            - name: {{ template "wso2am.resource.prefix" . }}-conf
              mountPath: /home/wso2carbon/wso2-config-volume/repository/conf
            - name: keystore
              mountPath: /home/wso2carbon/wso2-artifact-volume/repository/resources/security/wso2carbon.jks
              subPath: wso2carbon.jks
              readOnly: true
            - name: truststore
              mountPath: /home/wso2carbon/wso2-artifact-volume/repository/resources/security/client-truststore.jks
              subPath: client-truststore.jks
              readOnly: true
            {{ if .Values.wso2.deployment.persistentRuntimeArtifacts.apacheSolrIndexing.enabled }}
            - name: {{ template "wso2am.resource.prefix" . }}-local-carbon-database-storage
              mountPath: /home/wso2carbon/solr/database
            - name: {{ template "wso2am.resource.prefix" . }}-solr-indexed-data-storage
              mountPath: /home/wso2carbon/solr/indexed-data
            - name: {{ template "wso2am.resource.prefix" . }}-docker-entrypoint
              mountPath: /home/wso2carbon/docker-entrypoint.sh
              subPath: docker-entrypoint.sh
            {{ end }}
            - name: db-connector-jar
              mountPath: /home/wso2carbon/wso2-artifact-volume/repository/components/lib      
      {{- if .Values.wso2.deployment.am.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.wso2.deployment.am.imagePullSecrets }}
      {{- else if and (not (eq .Values.wso2.subscription.username "")) (not (eq .Values.wso2.subscription.password "")) }}
      imagePullSecrets:
        - name: {{ template "wso2am.resource.prefix" . }}-wso2-private-registry-creds
      {{ end }}
      volumes:
        - name: {{ template "wso2am.resource.prefix" . }}-conf
          configMap:
            name: {{ template "wso2am.resource.prefix" . }}-deployment-conf
        - name: keystore
          secret:
            secretName: dev-etisalat-am-wso2carbon-jks
        - name: truststore
          secret:
            secretName: dev-etisalat-am-client-truststore-jks
        {{ if .Values.wso2.deployment.persistentRuntimeArtifacts.apacheSolrIndexing.enabled }}
        - name: {{ template "wso2am.resource.prefix" . }}-local-carbon-database-storage
          persistentVolumeClaim:
            claimName: {{ template "wso2am.resource.prefix" . }}-local-carbon-database-volume-claim
        - name: {{ template "wso2am.resource.prefix" . }}-solr-indexed-data-storage
          persistentVolumeClaim:
            claimName: {{ template "wso2am.resource.prefix" . }}-solr-indexed-data-volume-claim
        - name: {{ template "wso2am.resource.prefix" . }}-docker-entrypoint
          configMap:
            name: {{ template "wso2am.resource.prefix" . }}-docker-entrypoint
            defaultMode: 0407
        {{ end }}
        - name: db-connector-jar
          emptyDir: {}
